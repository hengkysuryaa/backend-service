// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/repository/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/hengkysuryaa/backend-service/fetch-app/internal/domain/dto"
	entity "github.com/hengkysuryaa/backend-service/fetch-app/internal/domain/entity"
)

// MockWebRepo is a mock of WebRepo interface.
type MockWebRepo struct {
	ctrl     *gomock.Controller
	recorder *MockWebRepoMockRecorder
}

// MockWebRepoMockRecorder is the mock recorder for MockWebRepo.
type MockWebRepoMockRecorder struct {
	mock *MockWebRepo
}

// NewMockWebRepo creates a new mock instance.
func NewMockWebRepo(ctrl *gomock.Controller) *MockWebRepo {
	mock := &MockWebRepo{ctrl: ctrl}
	mock.recorder = &MockWebRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWebRepo) EXPECT() *MockWebRepoMockRecorder {
	return m.recorder
}

// ConvertCurrency mocks base method.
func (m *MockWebRepo) ConvertCurrency(ctx context.Context, data dto.ConvertCurrencyRequest) (entity.CurrencyConverter, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ConvertCurrency", ctx, data)
	ret0, _ := ret[0].(entity.CurrencyConverter)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ConvertCurrency indicates an expected call of ConvertCurrency.
func (mr *MockWebRepoMockRecorder) ConvertCurrency(ctx, data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ConvertCurrency", reflect.TypeOf((*MockWebRepo)(nil).ConvertCurrency), ctx, data)
}

// GetOrders mocks base method.
func (m *MockWebRepo) GetOrders(ctx context.Context) ([]entity.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrders", ctx)
	ret0, _ := ret[0].([]entity.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrders indicates an expected call of GetOrders.
func (mr *MockWebRepoMockRecorder) GetOrders(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrders", reflect.TypeOf((*MockWebRepo)(nil).GetOrders), ctx)
}
